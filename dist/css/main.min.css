@keyframes a{0%{transform:scale(1);opacity:.5}to{transform:scale(1.4);opacity:0}}@keyframes b{0%{transform:rotate(0)}to{transform:rotate(1turn)}}@keyframes c{0%{transform:rotate(0)}to{transform:rotate(-1turn)}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Raleway,sans-serif;font-size:1.6rem;color:#fff;background-color:#232323}h1.company-name{margin-bottom:.5em;font-size:3rem;font-family:Cinzel,serif;color:#d6c78e}.wrapper{margin:0 auto;max-width:1200px;width:100%}.section-title{position:relative;margin:0 auto 2em;font-size:3.2rem;color:#d6c78e;font-weight:200;width:-moz-fit-content;width:fit-content}.section-title:before{content:"";position:absolute;bottom:-.1em;left:0;width:40px;height:2px;background-color:#d6c78e}.section-title span{font-weight:900}.header{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(2,1fr);height:100vh;position:relative;overflow:hidden}.header__text{display:grid;justify-content:center;align-content:center;grid-row:2/3;grid-column:1/3;padding:2em}.header__text p{font-weight:200}.header__img{grid-row:1/2;grid-column:1/3;position:relative;width:100%;height:100%;background-image:url(../img/bitcoin_640.jpg);background-size:cover;background-position:50%;filter:sepia()}.header__shadow{position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,.3)}.header__arrow{display:none}.header__bg-icon-one,.header__bg-icon-two{position:absolute;opacity:.05;z-index:-5}.header__bg-icon-one{bottom:2em;right:-3em;width:50%;animation:b 55s infinite linear}.header__bg-icon-two{display:none}.hamburger{position:absolute;top:3em;left:1em;transform:translateY(-50%);z-index:100}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{background-color:#fff;z-index:100}.nav-mobile{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;justify-content:center;align-items:center;flex-direction:column;background-color:#fff;transform:translateX(-102%);transition:transform .3s;z-index:10}.nav-mobile--active{transform:translateX(0)}.nav-desktop{display:none}.nav__link{position:relative;display:inline-block;margin:.5em;padding:.5em;font-size:2.3rem;color:#191919;text-transform:uppercase;text-decoration:none;transition:color .3s}.nav__link:hover{color:#d6c78e}.cards{background-color:#191919;overflow:hidden}.cards__box{display:grid;grid-template-columns:repeat(9,1fr);gap:2em;padding:6em 2em}.cards__card{display:grid;position:relative;justify-items:center;padding:3em;text-align:center;border:1px solid transparent;border-radius:8px;background-color:#232323;transition:background-color .3s,border .3s;z-index:5}.cards__card:hover{background-color:#191919;border:1px solid #d6c78e;z-index:1}.cards__card:before{content:"";position:absolute;width:100%;height:100%;border:1px solid #d6c78e;border-radius:8px;opacity:0}.cards__card:hover:before{animation:a 1s}.cards__card img{margin-bottom:1em;width:60px}.cards__card h3{margin-bottom:.6em;text-transform:uppercase}.cards__card--one{grid-row:1/2;grid-column:1/-1}.cards__card--two{grid-row:2/3;grid-column:1/-1}.cards__card--three{grid-row:3/4;grid-column:1/-1}.info{position:relative;display:grid;grid-template-areas:"a" "b" "b";padding:6em 2em}.info__title{grid-area:a}.info__boxes{grid-area:b}.info__box-img{width:100%;object-fit:cover;filter:sepia()}.info__box-title{margin:.3em 0;font-size:2.6em;color:#d6c78e;font-weight:200}.info__box-text{margin-bottom:.5em}.info__box-link{display:block;margin-bottom:2em;font-weight:700;color:#d6c78e;text-align:right;text-decoration:none;transition:color .3s}.info__box-link:hover{color:#9b9165}.info__bg-icon{display:none}.plans{padding:6em 2em;background-color:#191919}.plans__box{margin:1em 0;padding:2em 1em;text-align:center;border:1px solid transparent;border-radius:8px;background-color:#232323;cursor:pointer;transition:background-color .3s,border .3s}.plans__box:hover{background-color:#191919;border:1px solid #d6c78e}.plans__item{margin:1em 0}.plans__item-icon{width:50px}.plans__item-name{margin-top:0;margin-bottom:1.5em;font-size:1.8rem;color:#d6c78e}.newsletter{padding:8em 2em;background-color:#a01c35;text-align:center}.newsletter__text{padding:0 1em;margin-bottom:1em;font-size:4rem;font-weight:200}.newsletter__form-input{margin-bottom:1em;padding:1em;width:100%;background-color:#fff;border:1px solid transparent}.newsletter__form-btn{padding:1em;border:1px solid #d6c78e;background:none;color:#d6c78e;font-weight:700;cursor:pointer;transition:background-color .3s,color .3s}.newsletter__form-btn:hover{color:#a01c35;background-color:#d6c78e}.gallery{display:grid;grid-template-columns:1fr 1fr}.gallery__img{height:300px;width:100%;object-fit:cover}.gallery__img:nth-child(odd){display:none}.contact{padding:6em 2em}.contact__form{display:grid;grid-template-columns:repeat(6,1fr)}.contact__form-box label{display:block;margin-bottom:.5em;font-size:2rem}.contact__form-box textarea{max-width:100%;width:100%;min-width:100px}.contact__form-box input,.contact__form-box textarea{padding:1em 2em;margin-bottom:2em;width:100%;color:#fff;background:none;border:1px solid hsla(0,0%,100%,.1)}.contact__form-box input:focus,.contact__form-box textarea:focus{outline:none;border:1px solid #d6c78e}.contact__form-box:first-child{grid-column:1/-1;grid-row:1/2}.contact__form-box:nth-child(2){grid-column:1/-1;grid-row:2/3}.contact__form-box:nth-child(3){grid-column:1/-1;grid-row:3/4}.contact__form-btn{grid-column:1/3;grid-row:4/5;padding:1em;background:none;border:1px solid #d6c78e;font-weight:700;color:#d6c78e;cursor:pointer;transition:background-color .3s,color .3s}.contact__form-btn:focus,.contact__form-btn:hover{outline:none;color:#232323;background-color:#d6c78e}.footer{padding:3em 1em;border-top:1px solid #191919;text-align:center}@media (min-width:768px){.cards__box{padding:10em 2em}.cards__card--one{grid-row:1/2;grid-column:1/4}.cards__card--two{grid-row:1/2;grid-column:4/7}.cards__card--three{grid-row:1/2;grid-column:7/10}.info{grid-template-areas:"a b" "a b" "a b";padding:6em 2em}.info__box{display:grid;justify-content:end}.info__title{padding:0 1em}.info__box-img,.info__box-text{min-width:500px}.info__bg-icon{position:absolute;display:block;opacity:.05;z-index:-5}.info__bg-icon--one{top:14%;width:20%;animation:b 160s infinite linear}.info__bg-icon--two{bottom:10%;left:10%;width:30%;animation:c 140s infinite linear}.info__bg-icon--three{top:26%;left:16%;width:50%;animation:c 160s infinite linear}.info__bg-icon--four{top:55%;left:-10%;width:15%;animation:b 140s infinite linear}.plans{padding:8em 2em}.plans__box{display:grid;grid-template-columns:repeat(5,1fr);align-items:center}.plans__item{margin:0 1em}.plans__item-name{margin-top:0;margin-bottom:0}.newsletter__wrapper{display:grid;grid-template-columns:1fr 1fr;align-items:center}.newsletter__text{margin-bottom:0}.newsletter__form{display:grid;grid-template-columns:3fr 1fr;gap:20px}.newsletter__form-input{margin-bottom:0}.gallery{grid-template-columns:repeat(4,1fr)}.gallery__img:nth-child(odd){display:block}.contact__form{gap:30px}.contact__form-box:first-child{grid-column:1/4;grid-row:1/2}.contact__form-box:nth-child(2){grid-column:4/7;grid-row:1/2}.contact__form-box:nth-child(3){grid-column:1/-1;grid-row:2/3}.contact__form-btn{grid-row:3/4}}@media (min-width:992px){h1.company-name{font-size:6rem}.section-title{font-size:4.8rem}.section-title:before{height:4px}.header{grid-template-rows:auto repeat(2,1fr)}.header__text{grid-row:2/4;grid-column:1/2}.header__text p{font-size:1.8rem}.header__img{grid-row:1/4;grid-column:2/3;background-image:url(../img/bitcoin_1920.jpg)}.header__arrow{display:block;bottom:3em;left:48%;transform:translateX(-50%);padding:2em}.header__arrow,.header__arrow:before{position:absolute;border:1px solid #fff;border-radius:50%}.header__arrow:before{content:"";top:0;left:0;width:100%;height:100%;animation:a 2s infinite}.header__arrow-icon{width:50px}.header__bg-icon-one{left:6em;bottom:8em;width:10%}.header__bg-icon-two{display:block;top:10em;left:35%;width:5%;animation:c 55s infinite linear}.nav{grid-column:1/2;grid-row:1/2;padding:1em}.nav-desktop{display:block;border-bottom:1px solid hsla(0,0%,100%,.2)}.nav__link{color:#fff}.nav__link:before{content:"";position:absolute;top:0;left:0;width:100%;height:100%;border:1px solid #d6c78e;opacity:0}.nav__link:hover:before{animation:a 1s}.hamburger{display:none}}@media (min-width:1200px){.header__text p{font-size:2.2rem}.gallery{grid-template-columns:repeat(8,1fr)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
